package org.redot.clover.app.kitchen;

import org.redot.clover.core.CloverManager;
import org.redot.clover.core.ext.BaseAction;
import org.redot.library.db.IQuery;
import org.redot.library.db.ITable;
import org.redot.library.lang.ArrayUtils;
import org.redot.library.lang.StringUtils;
import org.restlet.data.Form;

import java.util.List;
import java.util.Map;

/**
 * Created by IntelliJ IDEA.
 * User: Administrator
 * Date: 11-4-29
 * Time: 下午9:01
 * To change this template use File | Settings | File Templates.
 */
public class KitchenCaseAction extends BaseAction{

    public List<Map> list(){
        String sql = "SELECT A.*, B.STATUS_NAME AS CASE_STATUS_NAME " +
                "FROM X_KITCHEN_CASE A " +
                "LEFT JOIN X_STATUS B ON A.CASE_STATUS = B.STATUS " +
                "ORDER BY A.CASE_ID";
        IQuery query = getQuery();
        List<Map> list = query.doQuery(sql).tables();
        query.free();
        return list;
    }

    public String getCutProduct(String IP){
        String sql = "SELECT A.CASE_PS_CUT " +
                "FROM X_KITCHEN_CASE A " +
                "WHERE A.CASE_STATUS = 1 AND A.CASE_IP = '"+IP+"'";
        IQuery query = getQuery();
        String IDS = query.doQuery(sql).getValueString();
        query.free();
        if(IDS.length() > 0){
            IDS = ArrayUtils.join(",", ArrayUtils.unique(IDS.split(",")));
        }
        return IDS;
    }

    public String getSignProduct(String IP){
        String sql = "SELECT A.CASE_PS_SIGN " +
                "FROM X_KITCHEN_CASE A " +
                "WHERE A.CASE_STATUS = 1 AND A.CASE_IP = '"+IP+"'";
        IQuery query = getQuery();
        String IDS = query.doQuery(sql).getValueString();
        query.free();
        if(IDS.length() > 0){
            IDS = ArrayUtils.join(",", ArrayUtils.unique(IDS.split(",")));
        }
        return IDS;
    }

    public String getSignArea(String IP){
        String sql = "SELECT A.CASE_PS_SIGN_AREA " +
                "FROM X_KITCHEN_CASE A " +
                "WHERE A.CASE_STATUS = 1 AND A.CASE_IP = '"+IP+"'";
        IQuery query = getQuery();
        String IDS = query.doQuery(sql).getValueString();
        query.free();
        if(IDS.length() > 0){
            IDS = ArrayUtils.join(",", ArrayUtils.unique(IDS.split(",")));
        }
        return IDS;
    }

    public String getPlanProduct(String IP){
        String sql = "SELECT A.CASE_PS_PLAN " +
                "FROM X_KITCHEN_CASE A " +
                "WHERE A.CASE_STATUS = 1 AND A.CASE_IP = '"+IP+"'";
        IQuery query = getQuery();
        String IDS = query.doQuery(sql).getValueString();
        query.free();
        if(IDS.length() > 0){
            IDS = ArrayUtils.join(",", ArrayUtils.unique(IDS.split(",")));
        }
        return IDS;
    }

    public String getPlanArea(String IP){
        String sql = "SELECT A.CASE_PS_PLAN_AREA " +
                "FROM X_KITCHEN_CASE A " +
                "WHERE A.CASE_STATUS = 1 AND A.CASE_IP = '"+IP+"'";
        IQuery query = getQuery();
        String IDS = query.doQuery(sql).getValueString();
        query.free();
        if(IDS.length() > 0){
            IDS = ArrayUtils.join(",", ArrayUtils.unique(IDS.split(",")));
        }
        return IDS;
    }


    public int set(Form form){
        Map data = form.getValuesMap();
        String CASE_ID = StringUtils.toString(data.get("CASE_ID"));

        ITable T = getTable("X_KITCHEN_CASE").clearData();
        int result = 0;

        if(CASE_ID.length() == 0){
            CASE_ID = String.valueOf(T.getMaxID("CASE_ID"));
            data.put("CASE_ID", CASE_ID);
            result = T.data(data).create();
        }
        else{
            result = T.data(data).where(T.column("CASE_ID").eq(CASE_ID)).update();
        }
        if(result < 0){
            return CloverManager.CODE_FAILED;
        }

        return CloverManager.CODE_SUCCESS;
    }

    public Map get(String CASE_ID) {
        IQuery query = getQuery();
        String sql = "SELECT A.*,B.STATUS_NAME AS CASE_STATUS_NAME " +
                "FROM X_KITCHEN_CASE A " +
                "LEFT JOIN X_STATUS B ON A.CASE_STATUS = B.STATUS " +
                "WHERE A.CASE_ID = ?";
        Map map = query.doQuery(sql, CASE_ID).table();
        if(map == null){
            query.free();
            return map;
        }
        String CASE_PS_CUT = StringUtils.toString(map.get("CASE_PS_CUT"));
        String CASE_PS_SIGN = StringUtils.toString(map.get("CASE_PS_SIGN"));
        String CASE_PS_PLAN = StringUtils.toString(map.get("CASE_PS_PLAN"));
        String CASE_PS_PLAN_AREA = StringUtils.toString(map.get("CASE_PS_PLAN_AREA"));
        String CASE_PS_SIGN_AREA = StringUtils.toString(map.get("CASE_PS_SIGN_AREA"));
        String CASE_PS_CUT_NAME = "";
        String CASE_PS_SIGN_NAME = "";
        String CASE_PS_PLAN_NAME = "";
        String CASE_PS_SIGN_AREA_NAME = "";
        String CASE_PS_PLAN_AREA_NAME = "";
        if(CASE_PS_CUT.length() > 0){
            sql = "SELECT P_TYPE_NAME FROM X_P_TYPE WHERE P_TYPE_ID IN ("+CASE_PS_CUT+")";
            List<Map> list = query.doQuery(sql).tables();
            for(int i=0;i<list.size();i++){
                Map p = list.get(i);
                if(i > 0){
                    CASE_PS_CUT_NAME += ",";
                }
                CASE_PS_CUT_NAME += StringUtils.toString(p.get("P_TYPE_NAME"));
            }
        }
        map.put("CASE_PS_CUT_NAME", CASE_PS_CUT_NAME);
        if(CASE_PS_SIGN.length() > 0){
            sql = "SELECT P_TYPE_NAME FROM X_P_TYPE WHERE P_TYPE_ID IN ("+CASE_PS_SIGN+")";
            List<Map> list = query.doQuery(sql).tables();
            for(int i=0;i<list.size();i++){
                Map p = list.get(i);
                if(i > 0){
                    CASE_PS_SIGN_NAME += ",";
                }
                CASE_PS_SIGN_NAME += StringUtils.toString(p.get("P_TYPE_NAME"));
            }
        }
        map.put("CASE_PS_SIGN_NAME", CASE_PS_SIGN_NAME);
        if(CASE_PS_PLAN.length() > 0){
            sql = "SELECT P_TYPE_NAME FROM X_P_TYPE WHERE P_TYPE_ID IN ("+CASE_PS_PLAN+")";
            List<Map> list = query.doQuery(sql).tables();
            for(int i=0;i<list.size();i++){
                Map p = list.get(i);
                if(i > 0){
                    CASE_PS_PLAN_NAME += ",";
                }
                CASE_PS_PLAN_NAME += StringUtils.toString(p.get("P_TYPE_NAME"));
            }
        }
        map.put("CASE_PS_PLAN_NAME", CASE_PS_PLAN_NAME);

        if(CASE_PS_PLAN_AREA.length() > 0){
            sql = "SELECT DESK_AREA_NAME FROM X_DESK_AREA WHERE DESK_AREA_ID IN ("+CASE_PS_PLAN_AREA+")";
            List<Map> list = query.doQuery(sql).tables();
            for(int i=0;i<list.size();i++){
                Map p = list.get(i);
                if(i > 0){
                    CASE_PS_PLAN_AREA_NAME += ",";
                }
                CASE_PS_PLAN_AREA_NAME += StringUtils.toString(p.get("DESK_AREA_NAME"));
            }
        }
        map.put("CASE_PS_PLAN_AREA_NAME", CASE_PS_PLAN_AREA_NAME);
        if(CASE_PS_SIGN_AREA.length() > 0){
            sql = "SELECT DESK_AREA_NAME FROM X_DESK_AREA WHERE DESK_AREA_ID IN ("+CASE_PS_SIGN_AREA+")";
            List<Map> list = query.doQuery(sql).tables();
            for(int i=0;i<list.size();i++){
                Map p = list.get(i);
                if(i > 0){
                    CASE_PS_SIGN_AREA_NAME += ",";
                }
                CASE_PS_SIGN_AREA_NAME += StringUtils.toString(p.get("DESK_AREA_NAME"));
            }
        }
        map.put("CASE_PS_SIGN_AREA_NAME", CASE_PS_SIGN_AREA_NAME);
        query.free();
        return map;
    }

    public int delete(Form form) {
        Map data = form.getValuesMap();
        String CASE_ID = StringUtils.toString(data.get("CASE_ID"));
        if(CASE_ID.length() == 0){
            return CloverManager.CODE_FAILED;
        }
        String sql = "DELETE FROM X_KITCHEN_CASE WHERE CASE_ID = " + CASE_ID;
        IQuery query = getQuery();
        int result = query.doExec(sql);
        query.free();
        if(result < 0){
            return CloverManager.CODE_FAILED;
        }
        return CloverManager.CODE_SUCCESS;
    }
}
