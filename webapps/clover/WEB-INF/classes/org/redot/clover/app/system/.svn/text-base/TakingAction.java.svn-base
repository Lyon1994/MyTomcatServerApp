package org.redot.clover.app.system;

import org.redot.clover.core.CloverManager;
import org.redot.clover.core.ext.BaseAction;
import org.redot.library.db.IQuery;
import org.redot.library.db.ITable;
import org.redot.library.lang.StringUtils;
import org.restlet.data.Form;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by IntelliJ IDEA.
 * User: Administrator
 * Date: 10-12-31
 * Time: 上午2:33
 * To change this template use File | Settings | File Templates.
 */
public class TakingAction extends BaseAction {

    public List<Map> list() {
        String sql = "SELECT A.*, B.TAKING_TYPE_NAME, C.STATUS_NAME AS TAKING_STATUS_NAME FROM X_TAKING A " +
                "LEFT JOIN X_TAKING_TYPE B ON A.TAKING_TYPE = B.TAKING_TYPE " +
                "LEFT JOIN X_STATUS C ON A.TAKING_STATUS = C.STATUS " +
                "WHERE A.TAKING_STATUS <> 2 " +
                "ORDER BY  A.TAKING_TYPE, A.TAKING_ID";
        IQuery query = getQuery();
        List<Map> list = query.doQuery(sql).tables();
        query.free();
        return list;
    }



    public Map get(String TAKING_ID) {
        String sql = "SELECT * FROM X_TAKING WHERE TAKING_ID  = ?";
        IQuery query = getQuery();
        Map data = query.doQuery(sql, TAKING_ID).table();
        query.free();
        return data;
    }

    public int set(Form form) {
        Map data = form.getValuesMap();
        String TAKING_ID = StringUtils.toString(data.get("TAKING_ID"));
        ITable T = getTable("X_TAKING").clearData();
        int result = 0;
        if (TAKING_ID.length() == 0) {
            TAKING_ID = T.getMaxID("TAKING_ID") + "";
            data.put("TAKING_ID", TAKING_ID);
            result = T.data(data).create();
        } else {
            result = T.data(data).where(T.column("TAKING_ID").eq(TAKING_ID)).update();
        }

        if (result < 0) {
            return CloverManager.CODE_FAILED;
        }
        return CloverManager.CODE_SUCCESS;
    }

    public int delete(Form form) {
        Map data = form.getValuesMap();
        String TAKING_ID = StringUtils.toString(data.get("TAKING_ID"));
        if (TAKING_ID.length() == 0) {
            return CloverManager.CODE_FAILED;
        }
        String sql = "UPDATE X_TAKING SET TAKING_STATUS = 2 WHERE TAKING_ID = ?";
        IQuery query = getQuery();
        int result = query.doExec(sql, TAKING_ID);

        query.free();
        if (result < 0) {
            return CloverManager.CODE_FAILED;
        }
        return CloverManager.CODE_SUCCESS;
    }


}