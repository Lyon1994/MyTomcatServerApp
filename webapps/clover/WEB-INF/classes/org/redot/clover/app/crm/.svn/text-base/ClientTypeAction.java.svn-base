package org.redot.clover.app.crm;

import org.redot.clover.app.message.MessageManager;
import org.redot.clover.core.CloverManager;
import org.redot.clover.core.ext.BaseAction;
import org.redot.library.db.IQuery;
import org.redot.library.db.ITable;
import org.redot.library.lang.StringUtils;
import org.restlet.data.Form;

import java.util.Hashtable;
import java.util.List;
import java.util.Map;

/**
 * Created by IntelliJ IDEA.
 * User: Administrator
 * Date: 11-4-30
 * Time: 下午4:44
 * To change this template use File | Settings | File Templates.
 */
public class ClientTypeAction extends BaseAction{

    public List<Map> list(){
        String sql = "SELECT A.*, B.CLIENT_TYPE_STATUS_NAME FROM X_CLIENT_TYPE A " +
                "LEFT JOIN X_CLIENT_TYPE_STATUS B ON A.CLIENT_TYPE_STATUS = B.CLIENT_TYPE_STATUS " +
                "WHERE A.CLIENT_TYPE_STATUS <> 2 ORDER BY A.CLIENT_TYPE_SORT, A.CLIENT_TYPE_ID";
        IQuery query = getQuery();
        List<Map> list = query.doQuery(sql).tables();
        for(Map m : list){
            String CLIENT_TYPE_DISCOUNT_PS = StringUtils.toString(m.get("CLIENT_TYPE_DISCOUNT_PS"));
            String CLIENT_TYPE_DISCOUNT_PS_NAME = "";
            if(CLIENT_TYPE_DISCOUNT_PS.length() > 0){
                sql = "SELECT P_NAME FROM X_P WHERE P_ID IN ("+CLIENT_TYPE_DISCOUNT_PS+")";
                List<String> listx = query.doQuery(sql).listFirst();
                for(int i=0;i<listx.size();i++){
                    if(i > 0){
                        CLIENT_TYPE_DISCOUNT_PS_NAME += ",";
                    }
                    CLIENT_TYPE_DISCOUNT_PS_NAME += listx.get(i);
                }
                m.put("CLIENT_TYPE_DISCOUNT_PS_NAME", CLIENT_TYPE_DISCOUNT_PS_NAME);
            }
        }
        query.free();
        return list;
    }

    public List<Map> select(){
        String sql = "SELECT A.* FROM X_CLIENT_TYPE A " +
                "WHERE A.CLIENT_TYPE_STATUS = 1 ORDER BY A.CLIENT_TYPE_SORT, A.CLIENT_TYPE_ID";
        IQuery query = getQuery();
        List<Map> list = query.doQuery(sql).tables();
        query.free();
        return list;
    }

    public Map get(String CLIENT_TYPE_ID){
        if(CLIENT_TYPE_ID == null || CLIENT_TYPE_ID.equals("")){
            return null;
        }
        Map data = new Hashtable();
        String sql = "SELECT A.* FROM X_CLIENT_TYPE A " +
                "WHERE A.CLIENT_TYPE_ID = " + CLIENT_TYPE_ID;
        IQuery query = getQuery();
        Map m = query.doQuery(sql).table();
        if(m != null){
            data.putAll(m);
            String CLIENT_TYPE_DISCOUNT_PS = StringUtils.toString(m.get("CLIENT_TYPE_DISCOUNT_PS"));
            String CLIENT_TYPE_DISCOUNT_PS_NAME = "";
            if(CLIENT_TYPE_DISCOUNT_PS.length() > 0){
                sql = "SELECT P_NAME FROM X_P WHERE P_ID IN ("+CLIENT_TYPE_DISCOUNT_PS+")";
                List<Map> list = query.doQuery(sql).tables();
                for(int i=0;i<list.size();i++){
                    Map p = list.get(i);
                    if(i > 0){
                        CLIENT_TYPE_DISCOUNT_PS_NAME += ",";
                    }
                    CLIENT_TYPE_DISCOUNT_PS_NAME += StringUtils.toString(p.get("P_NAME"));
                }
                data.put("CLIENT_TYPE_DISCOUNT_PS_NAME", CLIENT_TYPE_DISCOUNT_PS_NAME);
            }
        }

        query.free();
        return data;
    }

    public int set(Form form){
        Map data = form.getValuesMap();
        String CLIENT_TYPE_ID = StringUtils.toString(data.get("CLIENT_TYPE_ID"));

        ITable T = getTable("X_CLIENT_TYPE").clearData();
        int result = 0;

        if(CLIENT_TYPE_ID.length() == 0){
            CLIENT_TYPE_ID = String.valueOf(T.getMaxID("CLIENT_TYPE_ID"));
            data.put("CLIENT_TYPE_ID", CLIENT_TYPE_ID);
            result = T.data(data).create();
        }
        else{
            result = T.data(data).where(T.column("CLIENT_TYPE_ID").eq(CLIENT_TYPE_ID)).update();
        }
        if(result < 0){
            return CloverManager.CODE_FAILED;
        }
        MessageManager.getInstance().setVersion(MessageManager.MSG_VER_CLIENT);
        return CloverManager.CODE_SUCCESS;
    }

    public int delete(Form form) {
        Map data = form.getValuesMap();
        String CLIENT_TYPE_ID = StringUtils.toString(data.get("CLIENT_TYPE_ID"));
        if(CLIENT_TYPE_ID.length() == 0){
            return CloverManager.CODE_FAILED;
        }
        IQuery query = getQuery();

        String sql = "UPDATE X_CLIENT_TYPE SET CLIENT_TYPE_STATUS = 2 WHERE CLIENT_TYPE_ID = " + CLIENT_TYPE_ID;
//        String sql = "DELETE FROM X_CLIENT_TYPE WHERE CLIENT_TYPE_ID = " + CLIENT_TYPE_ID;
        int result = query.doExec(sql);
        if(result < 0){
            query.free();
            return CloverManager.CODE_FAILED;
        }
        MessageManager.getInstance().setVersion(MessageManager.MSG_VER_CLIENT);
        return CloverManager.CODE_SUCCESS;
    }
}
