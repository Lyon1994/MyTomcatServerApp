package org.redot.clover.app.system;

import org.redot.clover.core.CloverManager;
import org.redot.clover.core.ext.BaseAction;
import org.redot.library.db.IQuery;
import org.redot.library.lang.StringUtils;
import org.restlet.data.Form;

import java.util.Hashtable;
import java.util.List;
import java.util.Map;

/**
 * Created by IntelliJ IDEA.
 * User: Administrator
 * Date: 11-3-27
 * Time: 下午5:36
 * To change this template use File | Settings | File Templates.
 */
public class DictAction extends BaseAction {

    public List<Map> getDict(String DICT_NAME) {
        String sql = "SELECT * FROM X_DICT WHERE DICT_NAME = '"+DICT_NAME+"' ORDER BY DICT_VALUE";
        IQuery query = getQuery();
        List<Map> map = query.doQuery(sql).tables();
        query.free();
        return map;
    }

    public int setDict(String DICT_NAME, Form form) {
        IQuery query = getQuery();
        query.doExec("DELETE FROM X_DICT WHERE DICT_NAME = '"+DICT_NAME+"'");
        String[] DICT_VALUE = form.getValuesArray("DICT_VALUE");
        for (int i = 0; i < DICT_VALUE.length; i++) {
            if (StringUtils.toString(DICT_VALUE[i]).length() == 0) {
                continue;
            }
            Map d = new Hashtable();
            d.put("DICT_NAME", DICT_NAME);
            d.put("DICT_VALUE", DICT_VALUE[i]);
            int result = getTable("X_DICT").data(d).create();
            if (result < 0) {
                return CloverManager.CODE_FAILED;
            }
        }
        return CloverManager.CODE_SUCCESS;
    }

    public int addDict(String DICT_NAME, String DICT_VALUE) {
        IQuery query = getQuery();
        if (StringUtils.toString(DICT_VALUE).length() == 0) {
            return CloverManager.CODE_FAILED;
        }
        if(query.rowCount("SELECT * FROM X_DICT WHERE DICT_NAME='"+DICT_NAME+"' AND DICT_VALUE='"+DICT_VALUE+"'") > 0){
            query.free();
            return CloverManager.CODE_SUCCESS;
        }
        Map d = new Hashtable();
        d.put("DICT_NAME", DICT_NAME);
        d.put("DICT_VALUE", DICT_VALUE);
        int result = getTable("X_DICT").data(d).create();
        query.free();
        if (result < 0) {
            return CloverManager.CODE_FAILED;
        }
        return CloverManager.CODE_SUCCESS;
    }
}
