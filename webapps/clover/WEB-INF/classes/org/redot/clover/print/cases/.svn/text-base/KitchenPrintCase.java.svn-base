package org.redot.clover.print.cases;

import org.redot.clover.core.CloverManager;
import org.redot.clover.print.PrintManager;
import org.redot.clover.print.PrintProxy;
import org.redot.clover.print.PrintService;
import org.redot.library.db.IQuery;
import org.redot.library.lang.ArrayUtils;
import org.redot.library.lang.DateUtils;
import org.redot.library.lang.StringUtils;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by IntelliJ IDEA.
 * User: Administrator
 * Date: 11-4-13
 * Time: 下午11:24
 * To change this template use File | Settings | File Templates.
 */
public class KitchenPrintCase extends AbstractPrintCase {

    private List<HashMap<String, String[]>> dataList = new ArrayList<HashMap<String, String[]>>();

    @Override
    public void process() {
        IQuery query = CloverManager.getInstance().getQuery();
        String sql = "SELECT PRINT_DT FROM X_PRINT_MONITOR WHERE PRINT_TYPE = 1";
        String PRINT_DT = query.doQuery(sql).getValue();
        String COND = "";
        if(PRINT_DT.length() > 0){
            COND += " AND A.O_P_DT_ORDER > '"+PRINT_DT+"'";
        }
        String CASE_PS = StringUtils.toString(getPrams().get("CASE_PS"));
        String CASE_PSX = StringUtils.toString(getPrams().get("CASE_PSX"));
        if(CASE_PS.length() > 0 || CASE_PSX.length() > 0){
            String s = "";
            s =  CASE_PS.length() > 0 ? "A.O_P_TYPE_ID IN ("+CASE_PS+")" : "";
            if(CASE_PSX.length() > 0){
                if(s.length() > 0){
                    s += " OR ";
                }
                s += "A.O_P_ID IN ("+CASE_PSX+")";
            }
            COND += " AND ("+ s +")";
        }
        List<String> P_NAME_LIST = new ArrayList<String>();
        List<String> P_NUM_LIST = new ArrayList<String>();
        List<String> P_UNIT_LIST = new ArrayList<String>();
        sql = "SELECT A.O_ID, A.O_P_ID, A.O_P_NAME,  A.O_P_NUM, A.O_P_TASTE, A.O_P_EXT_STATUS, C.UNIT_NAME FROM X_O_P A " +
                "LEFT JOIN X_P B ON A.O_P_ID=B.P_ID " +
                "LEFT JOIN X_UNIT C ON A.O_P_UNIT_ID = C.UNIT_ID " +
                "WHERE A.O_P_STATUS=1 AND A.O_P_COMBO = 0" + COND;
        List<Map> PS = query.doQuery(sql).tables();
        query.doExec("DELETE FROM X_PRINT_MONITOR WHERE PRINT_TYPE = 1");
        query.doExec("INSERT INTO X_PRINT_MONITOR (PRINT_TYPE, PRINT_DT) VALUES (1, '"+ DateUtils.getNow()+"')");
        if(PS.size() == 0){
            query.free();
            return;
        }
        String[] O_IDS = new String[PS.size()];
        for(int i=0;i<PS.size();i++){
            Map P = PS.get(i);
            O_IDS[i] = StringUtils.toString(P.get("O_ID"));
        }
        O_IDS = ArrayUtils.unique(O_IDS);
        sql = "SELECT A.O_ID, A.O_NO, A.O_DINE_NOP, B.DESK_CODE, B.DESK_NAME,A.O_SERVER FROM X_O A " +
                "LEFT JOIN X_DESK B ON A.O_DESK_ID = B.DESK_ID " +
                "WHERE A.O_ID IN (" + ArrayUtils.join(",", O_IDS) + ")";

        List<Map> OS = query.doQuery(sql).tables();
        for(int i=0; i<OS.size(); i++){
            Map O = OS.get(i);
            HashMap<String, String[]> D = new HashMap<String, String[]>();
            D.put("桌台", new String[]{StringUtils.toString(O.get("DESK_CODE")) + "-" + StringUtils.toString(O.get("DESK_NAME"))});
            D.put("订单号", new String[]{StringUtils.toString(O.get("O_NO"))});
            P_NAME_LIST.clear();
            P_NUM_LIST.clear();
            P_UNIT_LIST.clear();
            for(int j=0;j<PS.size();j++){
                Map P = PS.get(j);
                if(!StringUtils.toString(P.get("O_ID")).equals(StringUtils.toString(O.get("O_ID")))){
                    continue;
                }
                String P_TASTE = StringUtils.toString(P.get("O_P_TASTE"));
                String P_NAME = "";
            if(P_TASTE.length() > 0){
                P_NAME = StringUtils.toString(P.get("O_P_NAME")) + "("+P_TASTE+")";
            }
            else{
                P_NAME = StringUtils.toString(P.get("O_P_NAME"));
            }
                String O_P_EXT_STATUS = StringUtils.toString(P.get("O_P_EXT_STATUS"));
            if(O_P_EXT_STATUS.equals("4")){
                P_NAME += "(打包)";
            }
                P_NAME_LIST.add(P_NAME);
//                P_NAME_LIST.add(StringUtils.toString(P.get("O_P_NAME")));
                P_NUM_LIST.add(StringUtils.toString(P.get("O_P_NUM")));
                P_UNIT_LIST.add(StringUtils.toString(P.get("UNIT_NAME")));
            }
            int x = P_NAME_LIST.size();
            if(x == 0){
                continue;
            }
            D.put("菜品名称", P_NAME_LIST.toArray(new String[x]));
            D.put("数量", P_NUM_LIST.toArray(new String[x]));
            D.put("单位", P_UNIT_LIST.toArray(new String[x]));
            dataList.add(D);
        }
        query.free();
    }

    @Override
    public void print(){
        System.out.println("打印中");
        for(int i=0;i<dataList.size();i++){
            HashMap<String, String[]> D = dataList.get(i);
            if(D.get("菜品名称") == null || D.get("菜品名称").length == 0){
                continue;
            }
            PrintManager.getInstance().addProxy(new PrintProxy(getPrinter(), D, getTemplate(), getPrintNum(), isMoneyBox()));
            //PrintService.doPrint(getPrinter(), D, getTemplate(), getPrintNum(), isMoneyBox());
        }
    }
}
